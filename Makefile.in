# Copyright (c) 2009-2013, Mickaël Delahaye, http://micdel.fr
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

SHELL = /bin/sh

prefix = @prefix@
bindir = @bindir@
datarootdir = @datarootdir@
datadir = @datadir@
docdir = @docdir@
exec_prefix = @exec_prefix@
libdir = @libdir@
sharedstatedir = @sharedstatedir@

# DESTDIR Set to a non-empty path for packaging purposes (e.g., /tmp/fakeroot/)
DESTDIR = @DESTDIR@

# Input
CAMLIDL_NAME = yices yicesl

# Output

OUTPUT = $(PACKAGE_NAME)
OUTPUT_BYTECODE = $(OUTPUT).cma
OUTPUT_NATIVE = $(OUTPUT).cmxa
OUTPUT_NATIVE_LIB = $(OUTPUT).a
OUTPUT_O = $(OUTPUT).o
OUTPUT_LIB_NAME = $(OUTPUT)
OUTPUT_LIB = lib$(OUTPUT).a
OUTPUT_DLL = dll$(OUTPUT).so

META = META

# Tools ########################################################################

CAMLIDL = @CAMLIDL@
OCAMLC = @OCAMLC@
OCAMLOPT = @OCAMLOPT@
OCAMLDOC = @OCAMLDOC@
OCAMLFIND = @OCAMLFIND@
CC = @CC@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
CFLAGS = @CFLAGS@
AR = ar

INCR_LINKER = $(CC) $(CFLAGS) -r -nostdlib
#INCR_LINKER = $(LD) -r

# Options ######################################################################
# PARTIAL_LINKING and CUSTOM (for using custom bytecode compilation)

CUSTOM = @CUSTOM@
PARTIAL_LINKING = @PARTIAL_LINKING@
STATIC_YICES = @STATIC_YICES_WITH_GMP@

# Library dependencies #########################################################

# Libraries to use with 'ocamlopt' or 'ocamlc -custom'
CCLIBS = yices
ifneq ($(PARTIAL_LINKING),yes)
CCLIBS += camlidl
endif
ifeq ($(STATIC_YICES),yes)
CCLIBS += stdc++ m
endif

# Partial linking library
PLLIBS = camlidl # no dependency to camlidl for Ocamlyices users

# Libraries to build the shared library dll*.so (used only when CUSTOM=no)
DL_LIBS = camlidl yices
ifeq ($(STATIC_YICES),yes)
DL_LIBS += m stdc++
endif

# Names of Camlidl-related files ###############################################

CAMLIDL_IDL = $(CAMLIDL_NAME:=.idl)
CAMLIDL_ML = $(CAMLIDL_NAME:=.ml)
CAMLIDL_MLI = $(CAMLIDL_NAME:=.mli)
CAMLIDL_STUBS_C = $(CAMLIDL_NAME:=_stubs.c)
CAMLIDL_GENERATED = $(CAMLIDL_ML) $(CAMLIDL_MLI) $(CAMLIDL_STUBS_C)

CAMLIDL_STUBS_O = $(CAMLIDL_NAME:=_stubs.o)
CAMLIDL_CMI = $(CAMLIDL_NAME:=.cmi)
CAMLIDL_CMO = $(CAMLIDL_NAME:=.cmo)
CAMLIDL_CMX = $(CAMLIDL_NAME:=.cmx)

################################################################################

prefixlib = $(filter /%,$(1)) $(patsubst %,-l%,$(filter-out /%,$(1)))

PREFIXED_CCLIBS=$(addprefix -cclib ,$(call prefixlib,$(CCLIBS)))

ifdef DESTDIR
OFDESTDIR=-destdir $(DESTDIR)$(shell $(OCAMLFIND) printconf destdir)
endif

################################################################################

.PHONY: all build byte native camlidl clean distclean mrproper install uninstall

build all: byte native $(META)

byte: $(CAMLIDL_CMI) $(OUTPUT_BYTECODE)

native: $(CAMLIDL_CMI) $(OUTPUT_NATIVE)

camlidl : $(CAMLIDL_ML) $(CAMLIDL_MLI) $(CAMLIDL_STUBS_C)

# Generic compilation ##########################################################

%.ml %.mli %_stubs.c: %.idl %.hdr
	$(CAMLIDL) $<
	sed -f ml.sed -i $(<:.idl=.ml)
	sed -f ml.sed -f mli.sed -e '1r $(<:.idl=.hdr)' -i $(<:.idl=.mli)

%.cmi: %.mli
	$(OCAMLC) -c -o $@ $< 
%.cmo: %.ml
	$(OCAMLC) -c -o $@ $<
%.cmx: %.ml
	$(OCAMLOPT) -c -o $@ $<

# Generic dependencies #########################################################

$(CAMLIDL_CMO): %.cmo: %.cmi
$(CAMLIDL_CMX): %.cmx: %.cmi
%_stubs.o : %.h

# Other dependencies ###########################################################

yices.ml: yicesl.ml
yices.cmi: yicesl.cmi
yicesl.cmo: yicesl.cmi
yicesl.cmx: yicesl.cmi
yices.cmo: yicesl.cmi yices.cmi
yices.cmx: yicesl.cmx yices.cmi

# C compilation and linking ####################################################

.SUFFIXES:
.SUFFIXES: .c .o

$(OUTPUT_LIB): $(CAMLIDL_STUBS_O)
ifeq ($(PARTIAL_LINKING),no)
	$(AR) crs $@ $^
else
# Partial linking for efficiency
# For ld, libraries must be after last
	$(INCR_LINKER) $(LDFLAGS) -o $(OUTPUT_O) $^ $(call prefixlib,$(PLLIBS))
	$(AR) crs $@ $(OUTPUT_O)
endif

$(OUTPUT_NATIVE): $(CAMLIDL_CMX) $(OUTPUT_LIB)
	$(OCAMLOPT) -a -o $@ $< -cclib -l$(OUTPUT_LIB_NAME) $(PREFIXED_CCLIBS)

ifeq ($(CUSTOM),yes)

$(OUTPUT_BYTECODE): $(CAMLIDL_CMO) $(OUTPUT_LIB)
	$(OCAMLC) -a -custom -o $@ $< -cclib -l$(OUTPUT_LIB_NAME) $(PREFIXED_CCLIBS)

else

$(OUTPUT_DLL): $(CAMLIDL_STUBS_O)
	$(CC) $(CFLAGS) $(LDFLAGS) -shared -o $@ $^ $(call prefixlib,$(DL_LIBS))

$(OUTPUT_BYTECODE): $(CAMLIDL_CMO) $(OUTPUT_DLL)
	$(OCAMLC) -a -o $@ -dllib -l$(OUTPUT_DLL:dll%.so=%) $(CAMLIDL_CMO)

endif

# Meta #########################################################################

$(META): $(META).in
	@$(RM) $@
	sed -e 's|__NATIVE__|$(OUTPUT_NATIVE)|g' \
	-e 's|__BYTECODE__|$(OUTPUT_BYTECODE)|g' \
	-e 's|__VERSION__|$(PACKAGE_VERSION)|g' $< > $@
	@chmod -f a-w $@

# Doc ##########################################################################

ifneq ($(OCAMLDOC),)

doc: doc/html/index.html

doc/html/index.html: *.mli
	@mkdir -p $(dir $@)
	$(OCAMLDOC) -html $^ -d $(dir $@)
	@touch $@

endif

# Cleaning #####################################################################

clean:
	$(RM) *.cmo *.cmx *.o *_stubs.c

distclean mrproper: clean
	$(RM) *.cma *.cmxa *.cmi *.a *.so $(META)

# Install ######################################################################

INSTALLABLE = $(CAMLIDL_CMI) $(OUTPUT_LIB) $(OUTPUT_NATIVE_LIB) \
	$(OUTPUT_BYTECODE) $(OUTPUT_NATIVE) $(META)

ifeq ($(CUSTOM),no)
INSTALLABLE_DLL = $(OUTPUT_DLL)
endif

install: | $(INSTALLABLE) $(INSTALLABLE_DLL)
	$(OCAMLFIND) install $(OFDESTDIR) $(PACKAGE_NAME) $(INSTALLABLE) $(INSTALLABLE_DLL:%=-dll %)
uninstall:
	$(OCAMLFIND) remove $(PACKAGE_NAME)

# Makefile and configure #######################################################
Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.ac
	autoconf

