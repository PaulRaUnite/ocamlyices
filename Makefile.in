# Copyright (c) 2010, Mickaël Delahaye <mickael.delahaye@gmail.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

prefix = @prefix@
bindir = @bindir@
datarootdir = @datarootdir@
datadir = @datadir@
docdir = @docdir@
exec_prefix = @exec_prefix@
libdir = @libdir@
sharedstatedir = @sharedstatedir@

YICES_C_H = $(prefix)/include/yices_c.h
YICESL_C_H = $(prefix)/include/yicesl_c.h
DIFF = diff -bu
PATCH = patch

OCAMLLIB = @OCAMLLIB@
OCAMLDESTDIR = @OCAMLDESTDIR@
OCAMLYICES_LIB_DIR = $(OCAMLDESTDIR)/ocamlyices

OCAML_STUBLIBS = $(OCAMLDESTDIR)/stublibs

# Input

CAMLIDL_SOURCE = yices yicesl

# Output

OUTPUT = ocamlyices
OUTPUT_BYTECODE = $(OUTPUT).cma
OUTPUT_NATIVE = $(OUTPUT).cmxa
OUTPUT_NATIVE_LIB = $(OUTPUT_NATIVE:.cmxa=.a)
OUTPUT_O = $(OUTPUT).o
OUTPUT_LIB = lib$(OUTPUT).a
OUTPUT_DLL = dll$(OUTPUT).so

META = META

# Tools

CAMLIDL = @CAMLIDL@
OCAMLC = @OCAMLC@
OCAMLOPT = @OCAMLOPT@
OCAMLDOC = @OCAMLDOC@
CC = @CC@
CFLAGS = -O2
AR = ar
MKDIR_P = mkdir -p

INCREMENTAL_LINKER = $(CC) -r -nostdlib -L/usr/local/lib -L/usr/lib
#INCREMENTAL_LINKER = ld -r -L/usr/local/lib -L/usr/lib

# Parameters: PARTIAL_LINKING and CUSTOM (for using custom bytecode compilation)

CUSTOM = @CUSTOM@
PARTIAL_LINKING = @PARTIAL_LINKING@
FORCE_STATIC = @FORCE_STATIC@

# Library dependencies #########################################################

# Libraries to use with 'ocamlopt' or 'ocamlc -custom'
CCLIBS = stdc++ gmp
ifeq ($(PARTIAL_LINKING),yes)
ifeq ($(FORCE_STATIC),no)
CCLIBS += yices
endif
else
CCLIBS += camlidl yices
endif

# Partial linking library
PLLIBS = camlidl # no dependency to camlidl for Ocamlyices users
ifeq ($(FORCE_STATIC),yes)
PLLIBS += yices
endif

# Libraries to build the shared library dll*.so (used only when CUSTOM=no)
ifeq ($(FORCE_STATIC),yes)
DL_SHARED_LIBS = stdc++ gmp
DL_STATIC_LIBS = yices camlidl
else
DL_SHARED_LIBS = yices stdc++ gmp
DL_STATIC_LIBS = camlidl
endif

# Names of Camlidl-related files ###############################################

CAMLIDL_IDL = $(CAMLIDL_SOURCE:=.idl)
CAMLIDL_ML = $(CAMLIDL_SOURCE:=.ml)
CAMLIDL_MLI = $(CAMLIDL_SOURCE:=.mli)
CAMLIDL_STUBS_C = $(CAMLIDL_SOURCE:=_stubs.c)
CAMLIDL_GENERATED = $(CAMLIDL_ML) $(CAMLIDL_MLI) $(CAMLIDL_STUBS_C)

CAMLIDL_STUBS_O = $(CAMLIDL_STUBS_C:.c=.o)
CAMLIDL_CMI = $(CAMLIDL_MLI:.mli=.cmi)
CAMLIDL_CMO = $(CAMLIDL_ML:.ml=.cmo)
CAMLIDL_CMX = $(CAMLIDL_ML:.ml=.cmx)

################################################################################

.PHONY: all byte native camlidl patches clean distclean mrproper install uninstall

all: camlidl byte native $(META)

byte: $(CAMLIDL_CMI) $(OUTPUT_BYTECODE)

native: $(CAMLIDL_CMI) $(OUTPUT_NATIVE)

camlidl : $(CAMLIDL_ML) $(CAMLIDL_MLI) $(CAMLIDL_STUBS_C)

# Patching #####################################################################

yices.idl: yices.patch
	$(PATCH) $(YICES_C_H) -i $< -o $@

yicesl.idl: yicesl.patch
	$(PATCH) $(YICESL_C_H) -i $< -o $@

patches: yices.idl
	$(DIFF) --label yices_c.h $(YICES_C_H) --label yices.idl yices.idl > yices.patch; true
	$(DIFF) --label yicesl_c.h $(YICESL_C_H) --label yicesl.idl yicesl.idl > yicesl.patch; true

# Generic compilation ##########################################################

%.ml %.mli %_stubs.c : %.idl
	$(CAMLIDL) $<
	sed -e '/^and yicesl\?_error/ d' \
	 -e '/^and\s\+yices_type_ptr = yices_type$$/ d' \
	 -e 's/yices_type_ptr/yices_type/g' \
	 -e 's/ yices_type/ typ/g' \
	 -e 's/\([ (.]\)yicesl\?_/\1/g' -i $(<:.idl=.mli) -i $(<:.idl=.ml)
	sed -e '/^and var_decl_iterator$$/ d' -i $(<:.idl=.mli)

%.cmi: %.mli
	$(OCAMLC) -c $< -o $@
%.cmo: %.ml
	$(OCAMLC) -c $< -o $@
%.cmx: %.ml
	$(OCAMLOPT) -c $< -o $@

# Generic dependencies #########################################################

$(CAMLIDL_CMO): %.cmo: %.cmi
$(CAMLIDL_CMX): %.cmx: %.cmi
%_stubs.o : %.h

# Other dependencies ###########################################################

yices.ml: yicesl.ml
yices.cmi: yicesl.cmi
yicesl.cmo: yicesl.cmi 
yicesl.cmx: yicesl.cmi 
yices.cmo: yicesl.cmi yices.cmi 
yices.cmx: yicesl.cmx yices.cmi 

# C compilation and linking ####################################################

$(OUTPUT_LIB): $(CAMLIDL_STUBS_O) yices_extra.o
ifeq ($(PARTIAL_LINKING),no)
	$(AR) crs $@ $^
else
# Partial linking for efficiency
# For ld, libraries must be after last
	$(INCREMENTAL_LINKER) -L$(OCAMLLIB) -o $(OUTPUT_O) $^ $(PLLIBS:%=-l%) 
	$(AR) crs $@ $(OUTPUT_O)
endif

ifeq ($(CUSTOM),yes)
$(OUTPUT_BYTECODE): $(CAMLIDL_CMO) $(OUTPUT_LIB)
	$(OCAMLC) -a -custom -o $@ -cclib -l$(OUTPUT_LIB:lib%.a=%) $(CCLIBS:%=-cclib -l%) $(CAMLIDL_CMO)
else
$(OUTPUT_DLL): $(CAMLIDL_STUBS_C) yices_extra.c
	$(CC) $(CFLAGS) -fPIC -shared -o $@ $^ -L$(OCAMLLIB) -Wl,-Bstatic $(DL_STATIC_LIBS:%=-l%) -Wl,-Bdynamic $(DL_SHARED_LIBS:%=-l%)
$(OUTPUT_BYTECODE): $(CAMLIDL_CMO) $(OUTPUT_DLL)
	$(OCAMLC) -a -o $@ -dllib -l$(OUTPUT_DLL:dll%.so=%) $(CAMLIDL_CMO)
endif

$(OUTPUT_NATIVE): $(CAMLIDL_CMX) $(OUTPUT_LIB)
	$(OCAMLOPT) -a -o $@ -cclib -l$(OUTPUT_LIB:lib%.a=%) $(CCLIBS:%=-cclib -l%) $(CAMLIDL_CMX)

# Meta #########################################################################

$(META): $(META).in
	@$(RM) $@
	sed -e 's|__NATIVE__|$(OUTPUT_NATIVE)|g' -e 's|__BYTECODE__|$(OUTPUT_BYTECODE)|g' -e 's|__VERSION__|$(PACKAGE_VERSION)|g' $< > $@
	@chmod -f a-w $@

# Doc ##########################################################################

doc: doc/html/.done

doc/html/.done: *.mli
	@mkdir -p $(dir $@)
	ocamldoc -html $^ -d $(dir $@)
	@touch $@

# Cleaning #####################################################################

clean:
	$(RM) *.cmo *.cmi *.cmx *.a *.o $(CAMLIDL_GENERATED)

distclean mrproper: clean
	$(RM) *.cma *.cmxa *.a *.so $(META)

# Install ######################################################################

install:
	install -d $(OCAMLYICES_LIB_DIR)
	install -t $(OCAMLYICES_LIB_DIR) $(CAMLIDL_CMI) $(OUTPUT_LIB) $(OUTPUT_NATIVE_LIB) $(OUTPUT_BYTECODE) $(OUTPUT_NATIVE) $(META)
ifeq ($(CUSTOM),no)
	install -t $(OCAML_STUBLIBS) $(OUTPUT_DLL)
endif

uninstall:
	$(RM) -r $(OCAMLYICES_LIB_DIR)
	$(RM) $(OCAML_STUBLIBS)/$(OUTPUT_DLL)

# Makefile and configure #######################################################
Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.ac
	autoconf

